# Generated from asteroidea.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,47,248,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,1,0,1,0,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,
        1,3,1,3,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,6,1,7,1,7,1,7,1,8,
        1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,14,
        1,14,1,14,1,15,1,15,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,
        1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,
        1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,1,31,
        1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,1,34,1,34,1,34,1,35,1,35,
        1,35,1,36,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,
        1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,42,4,42,212,8,42,11,42,12,42,
        213,1,43,1,43,5,43,218,8,43,10,43,12,43,221,9,43,1,43,1,43,1,44,
        1,44,5,44,227,8,44,10,44,12,44,230,9,44,1,45,1,45,1,45,1,45,1,46,
        1,46,1,46,1,46,5,46,240,8,46,10,46,12,46,243,9,46,1,46,1,46,1,46,
        1,46,2,219,241,0,47,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,
        21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,
        43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,
        65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,
        87,44,89,45,91,46,93,47,1,0,4,1,0,48,57,3,0,65,90,95,95,97,122,4,
        0,48,57,65,90,95,95,97,122,3,0,9,10,12,13,32,32,251,0,1,1,0,0,0,
        0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
        1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
        1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
        1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,
        1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,
        1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
        1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,
        1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,
        1,0,0,0,1,95,1,0,0,0,3,97,1,0,0,0,5,100,1,0,0,0,7,106,1,0,0,0,9,
        112,1,0,0,0,11,114,1,0,0,0,13,117,1,0,0,0,15,120,1,0,0,0,17,123,
        1,0,0,0,19,126,1,0,0,0,21,128,1,0,0,0,23,130,1,0,0,0,25,132,1,0,
        0,0,27,134,1,0,0,0,29,137,1,0,0,0,31,140,1,0,0,0,33,144,1,0,0,0,
        35,146,1,0,0,0,37,148,1,0,0,0,39,150,1,0,0,0,41,152,1,0,0,0,43,154,
        1,0,0,0,45,156,1,0,0,0,47,158,1,0,0,0,49,160,1,0,0,0,51,162,1,0,
        0,0,53,164,1,0,0,0,55,166,1,0,0,0,57,168,1,0,0,0,59,170,1,0,0,0,
        61,173,1,0,0,0,63,176,1,0,0,0,65,179,1,0,0,0,67,182,1,0,0,0,69,185,
        1,0,0,0,71,188,1,0,0,0,73,191,1,0,0,0,75,194,1,0,0,0,77,197,1,0,
        0,0,79,200,1,0,0,0,81,203,1,0,0,0,83,206,1,0,0,0,85,211,1,0,0,0,
        87,215,1,0,0,0,89,224,1,0,0,0,91,231,1,0,0,0,93,235,1,0,0,0,95,96,
        5,72,0,0,96,2,1,0,0,0,97,98,5,38,0,0,98,99,5,38,0,0,99,4,1,0,0,0,
        100,101,5,91,0,0,101,102,5,61,0,0,102,103,5,61,0,0,103,104,5,61,
        0,0,104,105,5,93,0,0,105,6,1,0,0,0,106,107,5,91,0,0,107,108,5,37,
        0,0,108,109,5,37,0,0,109,110,5,37,0,0,110,111,5,93,0,0,111,8,1,0,
        0,0,112,113,5,35,0,0,113,10,1,0,0,0,114,115,5,35,0,0,115,116,5,35,
        0,0,116,12,1,0,0,0,117,118,5,58,0,0,118,119,5,61,0,0,119,14,1,0,
        0,0,120,121,5,43,0,0,121,122,5,61,0,0,122,16,1,0,0,0,123,124,5,45,
        0,0,124,125,5,61,0,0,125,18,1,0,0,0,126,127,5,91,0,0,127,20,1,0,
        0,0,128,129,5,45,0,0,129,22,1,0,0,0,130,131,5,93,0,0,131,24,1,0,
        0,0,132,133,5,63,0,0,133,26,1,0,0,0,134,135,5,33,0,0,135,136,5,63,
        0,0,136,28,1,0,0,0,137,138,5,63,0,0,138,139,5,63,0,0,139,30,1,0,
        0,0,140,141,5,33,0,0,141,142,5,63,0,0,142,143,5,63,0,0,143,32,1,
        0,0,0,144,145,5,38,0,0,145,34,1,0,0,0,146,147,5,42,0,0,147,36,1,
        0,0,0,148,149,5,40,0,0,149,38,1,0,0,0,150,151,5,41,0,0,151,40,1,
        0,0,0,152,153,5,64,0,0,153,42,1,0,0,0,154,155,5,94,0,0,155,44,1,
        0,0,0,156,157,5,43,0,0,157,46,1,0,0,0,158,159,5,126,0,0,159,48,1,
        0,0,0,160,161,5,36,0,0,161,50,1,0,0,0,162,163,5,60,0,0,163,52,1,
        0,0,0,164,165,5,44,0,0,165,54,1,0,0,0,166,167,5,62,0,0,167,56,1,
        0,0,0,168,169,5,124,0,0,169,58,1,0,0,0,170,171,5,43,0,0,171,172,
        5,43,0,0,172,60,1,0,0,0,173,174,5,45,0,0,174,175,5,45,0,0,175,62,
        1,0,0,0,176,177,5,94,0,0,177,178,5,94,0,0,178,64,1,0,0,0,179,180,
        5,60,0,0,180,181,5,45,0,0,181,66,1,0,0,0,182,183,5,45,0,0,183,184,
        5,62,0,0,184,68,1,0,0,0,185,186,5,60,0,0,186,187,5,60,0,0,187,70,
        1,0,0,0,188,189,5,62,0,0,189,190,5,62,0,0,190,72,1,0,0,0,191,192,
        5,61,0,0,192,193,5,62,0,0,193,74,1,0,0,0,194,195,5,60,0,0,195,196,
        5,61,0,0,196,76,1,0,0,0,197,198,5,60,0,0,198,199,5,62,0,0,199,78,
        1,0,0,0,200,201,5,37,0,0,201,202,5,62,0,0,202,80,1,0,0,0,203,204,
        5,60,0,0,204,205,5,37,0,0,205,82,1,0,0,0,206,207,5,60,0,0,207,208,
        5,37,0,0,208,209,5,62,0,0,209,84,1,0,0,0,210,212,7,0,0,0,211,210,
        1,0,0,0,212,213,1,0,0,0,213,211,1,0,0,0,213,214,1,0,0,0,214,86,1,
        0,0,0,215,219,5,34,0,0,216,218,9,0,0,0,217,216,1,0,0,0,218,221,1,
        0,0,0,219,220,1,0,0,0,219,217,1,0,0,0,220,222,1,0,0,0,221,219,1,
        0,0,0,222,223,5,34,0,0,223,88,1,0,0,0,224,228,7,1,0,0,225,227,7,
        2,0,0,226,225,1,0,0,0,227,230,1,0,0,0,228,226,1,0,0,0,228,229,1,
        0,0,0,229,90,1,0,0,0,230,228,1,0,0,0,231,232,7,3,0,0,232,233,1,0,
        0,0,233,234,6,45,0,0,234,92,1,0,0,0,235,236,5,47,0,0,236,237,5,47,
        0,0,237,241,1,0,0,0,238,240,9,0,0,0,239,238,1,0,0,0,240,243,1,0,
        0,0,241,242,1,0,0,0,241,239,1,0,0,0,242,244,1,0,0,0,243,241,1,0,
        0,0,244,245,5,10,0,0,245,246,1,0,0,0,246,247,6,46,0,0,247,94,1,0,
        0,0,5,0,213,219,228,241,1,6,0,0
    ]

class asteroideaLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    MOVE_LEFT_OP = 33
    MOVE_RIGHT_OP = 34
    MOVE_START_OP = 35
    MOVE_END_OP = 36
    READ_CHAR_OP = 37
    PRINT_CHAR_OP = 38
    PRINT_MOVE_CHAR_OP = 39
    READ_INT_OP = 40
    PRINT_INT_OP = 41
    PRINT_MOVE_INT_OP = 42
    NUM = 43
    STRING = 44
    IDENTIFIER = 45
    WS = 46
    COMMENT = 47

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'H'", "'&&'", "'[===]'", "'[%%%]'", "'#'", "'##'", "':='", 
            "'+='", "'-='", "'['", "'-'", "']'", "'?'", "'!?'", "'??'", 
            "'!??'", "'&'", "'*'", "'('", "')'", "'@'", "'^'", "'+'", "'~'", 
            "'$'", "'<'", "','", "'>'", "'|'", "'++'", "'--'", "'^^'", "'<-'", 
            "'->'", "'<<'", "'>>'", "'=>'", "'<='", "'<>'", "'%>'", "'<%'", 
            "'<%>'" ]

    symbolicNames = [ "<INVALID>",
            "MOVE_LEFT_OP", "MOVE_RIGHT_OP", "MOVE_START_OP", "MOVE_END_OP", 
            "READ_CHAR_OP", "PRINT_CHAR_OP", "PRINT_MOVE_CHAR_OP", "READ_INT_OP", 
            "PRINT_INT_OP", "PRINT_MOVE_INT_OP", "NUM", "STRING", "IDENTIFIER", 
            "WS", "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "MOVE_LEFT_OP", "MOVE_RIGHT_OP", "MOVE_START_OP", "MOVE_END_OP", 
                  "READ_CHAR_OP", "PRINT_CHAR_OP", "PRINT_MOVE_CHAR_OP", 
                  "READ_INT_OP", "PRINT_INT_OP", "PRINT_MOVE_INT_OP", "NUM", 
                  "STRING", "IDENTIFIER", "WS", "COMMENT" ]

    grammarFileName = "asteroidea.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


